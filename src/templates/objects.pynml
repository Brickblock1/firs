<tal:industries repeat="industry registered_industries">
    <tal:objects repeat="object industry.objects.items()">
        <tal:spritelayouts repeat="spritelayout object[1]">
            // for debug to match to actual declared layout name: ${spritelayout.id}
            spritelayout ${industry.id}_object_${object[0]}_spritelayout_${repeat.spritelayout.index} {
                childsprite {
                    sprite: ${industry.unpack_sprite_or_spriteset(spritelayout.ground_sprite)};
                    always_draw: 1;
                }
                /* snow nerfed
                childsprite {
                    sprite: ${industry.unpack_sprite_or_spriteset(spritelayout.ground_sprite, snow_overlay=True)};
                    //hide_sprite: (!LOAD_TEMP(13));
                    always_draw: 1;
                }
                 */
                <tal:build_building_sprites repeat="building_sprite spritelayout.building_sprites">
                    building {
                        sprite: ${industry.unpack_sprite_or_spriteset(building_sprite, construction_state_num=3)};
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: ${building_sprite.xoffset};
                        yoffset: ${building_sprite.yoffset};
                        zoffset: ${building_sprite.zoffset};
                        xextent: ${building_sprite.xextent};
                        yextent: ${building_sprite.yextent};
                        zextent: ${building_sprite.zextent};
                        always_draw: ${building_sprite.always_draw};
                    }
                    /* snow nerfed
                    building {
                        sprite: ${industry.unpack_sprite_or_spriteset(building_sprite, construction_state_num=3, snow_overlay=True)};
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: ${building_sprite.xoffset};
                        yoffset: ${building_sprite.yoffset};
                        zoffset: ${building_sprite.zoffset};
                        xextent: ${building_sprite.xextent};
                        yextent: ${building_sprite.yextent};
                        zextent: ${building_sprite.zextent};
                        always_draw: ${building_sprite.always_draw};
                    }
                    */
                </tal:build_building_sprites>
            }
            </tal:spritelayouts>
        switch(FEAT_OBJECTS, SELF, ${industry.id}_object_${object[0]}_switch_graphics, view) {
            <tal:views repeat="view_num range(len(object[1]))">
                ${view_num}: ${industry.id}_object_${object[0]}_spritelayout_${view_num};
            </tal:views>
        }
        item(FEAT_OBJECTS, ${industry.id}_object_${object[0]}) {
            property {
                class:                  "FIRS";
                classname:              string(STR_OBJ_CLASSNAME_FIRS);
                climates_available:     ALL_CLIMATES;
                size:                   [1, 1];
                build_cost_multiplier:  1;
                remove_cost_multiplier: 1;
                introduction_date:      date(1,1,1);        // available from day 1
                end_of_life_date:       date(10000,1,1);    // available till year 10000
                /* Anything can overbuild the object, removing returns the money, we don't want foundations and we want to allow bridges */
                object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
                height:                 6;
                num_views:              ${len(object[1])};
                // name derived from industry currently
                ${industry.get_property_declaration('name', None)}
            }
            graphics {
                //additional_text:      return string(STR_OBJ_TEST_CABBAGE);
                purchase:               ${industry.id}_object_${object[0]}_switch_graphics;
                ${industry.id}_object_${object[0]}_switch_graphics;
            }
        }
    </tal:objects>
</tal:industries>
