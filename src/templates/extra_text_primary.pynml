<!--! Extra text in the industry window (callback 3A) -->

switch(FEAT_INDUSTRIES, SELF, ${industry.id}_extra_text_foo, [
	STORE_TEMP((primary_level1_requirement * ${industry.supply_requirements[2]}) |
	(primary_level2_requirement * ${industry.supply_requirements[2]}) << 16, 0x100),
	LOAD_PERM(${industry.perm_storage.var_current_supplies_prod_factor})
]) {
	primary_level2_produced_percent: return string(STR_${industry.supply_requirements[1]}_PRODUCTION_4X);
	primary_level1_produced_percent: return string(STR_${industry.supply_requirements[1]}_PRODUCTION_2X);
	return string(STR_${industry.supply_requirements[1]}_PRODUCTION_1X);
}


<!--!switch (FEAT_INDUSTRIES, PARENT, ${industry.id}_extra_text, ${"[STORE_PERM(var[0x41, 0, 0xFFFF] % " + str(industry.TEST_town_type) + ", 128)]" if industry.TEST_town_type is not None else 0}) {
    return ${industry.id}_extra_text_foo;
}-->
switch (FEAT_INDUSTRIES, PARENT, ${industry.id}_extra_text, STORE_PERM(town_index % 3, 127)) {
    return ${industry.id}_extra_text_foo;
}

<!--!
    Additional text after the cargos in the industry window (callback 37)
    The 0x3800 expressions here are related to using extended cb 37 before nml support was added, and can be removed when nml is updated
-->

<!--!
    Additional text after the cargos in the industry window (callback 37)
    The 0x3800 expressions here are related to using extended cb 37 before nml support was added, and can be removed when nml is updated
-->

<tal:economies repeat="economy industry.economies_enabled_for_industry">
    <!--! up to 8 cargos, n.b. date register names are indexed to 1 not 0 -->
    <tal:cargos repeat="input_cargo industry.get_accept_cargo_types(economy)">
        switch (FEAT_INDUSTRIES, SELF, ${industry.id}_cargo_subtype_display_cargo_${input_cargo}_economy_${economy.numeric_id}, [
                current_date - LOAD_PERM(${getattr(industry.perm_storage, 'date_received_cargo_' + str(repeat.input_cargo.number))}) > 90
            ]) {
            0: return 0x3800 + string(STR_CARGO_SUBTYPE_DISPLAY_SECONDARY_CARGO_DELIVERED);
            1: return 0x3800 + string(STR_EMPTY);
        }
    </tal:cargos>
    switch (FEAT_INDUSTRIES, SELF, ${industry.id}_cargo_subtype_display_switch_cargo_economy_${economy.numeric_id}, getbits(extra_callback_info2, 16, 23)) {
        <!--! up to 8 cargos, indexed to 1 not 0 -->
        <tal:cargos repeat="input_cargo industry.get_accept_cargo_types(economy)">
            ${input_cargo}: ${industry.id}_cargo_subtype_display_cargo_${input_cargo}_economy_${economy.numeric_id};
        </tal:cargos>
        return CB_RESULT_NO_TEXT;
    }
</tal:economies>

switch (FEAT_INDUSTRIES, SELF, ${industry.id}_cargo_subtype_display_switch_economy, economy) {
    <tal:economies repeat="economy industry.economies_enabled_for_industry">
        ${economy.numeric_id}:  ${industry.id}_cargo_subtype_display_switch_cargo_economy_${economy.numeric_id};
    </tal:economies>
}

<!--! only show subtype in industry window, not other contexts -->
switch (FEAT_INDUSTRIES, SELF, ${industry.id}_cargo_subtype_display, getbits(extra_callback_info2, 8, 8)) {
    1: ${industry.id}_cargo_subtype_display_switch_economy;
    return CB_RESULT_NO_TEXT;
}

